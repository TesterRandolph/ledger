# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

executable("app") {
  output_name = "ledger"
  sources = [
    "app.cc",
  ]

  deps = [
    ":lib",
    "//apps/ledger/services/internal",
    "//apps/ledger/src/configuration:lib",
    "//apps/ledger/src/environment",
    "//apps/ledger/src/network",
    "//apps/ledger/src/storage/impl:lib",
    "//apps/ledger/src/storage/public",
    "//apps/modular/lib/app",
    "//apps/network/services",
    "//apps/tracing/lib/trace:provider",
    "//lib/fidl/cpp/bindings",
    "//lib/ftl",
    "//lib/mtl",
  ]
}

source_set("lib") {
  sources = [
    "branch_tracker.cc",
    "branch_tracker.h",
    "constants.cc",
    "constants.h",
    "diff_utils.cc",
    "diff_utils.h",
    "fidl/bound_interface.h",
    "ledger_impl.cc",
    "ledger_impl.h",
    "ledger_manager.cc",
    "ledger_manager.h",
    "ledger_repository_factory_impl.cc",
    "ledger_repository_factory_impl.h",
    "ledger_repository_impl.cc",
    "ledger_repository_impl.h",
    "merging/custom_merge_strategy.cc",
    "merging/custom_merge_strategy.h",
    "merging/last_one_wins_merge_strategy.cc",
    "merging/last_one_wins_merge_strategy.h",
    "merging/ledger_merge_manager.cc",
    "merging/ledger_merge_manager.h",
    "merging/merge_resolver.cc",
    "merging/merge_resolver.h",
    "merging/merge_strategy.h",
    "page_delegate.cc",
    "page_delegate.h",
    "page_impl.cc",
    "page_impl.h",
    "page_manager.cc",
    "page_manager.h",
    "page_snapshot_impl.cc",
    "page_snapshot_impl.h",
    "page_utils.cc",
    "page_utils.h",
  ]

  public_deps = [
    "//apps/ledger/src/firebase",
  ]

  deps = [
    "//apps/ledger/services/internal",
    "//apps/ledger/services/public",
    "//apps/ledger/src/callback",
    "//apps/ledger/src/cloud_sync/impl",
    "//apps/ledger/src/configuration:lib",
    "//apps/ledger/src/convert",
    "//apps/ledger/src/environment",
    "//apps/ledger/src/glue/crypto",
    "//apps/ledger/src/glue/socket",
    "//apps/ledger/src/network",
    "//apps/ledger/src/storage/impl:lib",
    "//apps/ledger/src/storage/public",
    "//apps/tracing/lib/trace:provider",
    "//lib/fidl/cpp/bindings",
    "//lib/ftl",
  ]
}

group("tests") {
  testonly = true

  deps = [
    ":application_tests",
    "//apps/ledger/src/app/integration_tests",
  ]
}

source_set("unittests") {
  testonly = true

  sources = [
    "ledger_manager_unittest.cc",
    "merging/merge_resolver_unittest.cc",
    "page_impl_unittest.cc",
    "page_manager_unittest.cc",
  ]

  deps = [
    ":lib",
    "//apps/ledger/src/cloud_sync/impl",
    "//apps/ledger/src/cloud_sync/test",
    "//apps/ledger/src/convert",
    "//apps/ledger/src/glue/crypto",
    "//apps/ledger/src/storage/fake:lib",
    "//apps/ledger/src/storage/impl:lib",
    "//apps/ledger/src/storage/public",
    "//apps/ledger/src/storage/test",
    "//apps/ledger/src/test:lib",
    "//lib/fidl/cpp/bindings",
    "//lib/ftl",
    "//lib/mtl",
    "//third_party/gtest",
  ]
}

executable("application_tests") {
  output_name = "ledger_apptests"

  testonly = true

  sources = [
    "ledger_apptest.cc",
  ]

  deps = [
    "//apps/ledger/services/internal:internal_sync",
    "//apps/ledger/services/public:public_sync",
    "//apps/modular/lib/app",
    "//lib/fidl/cpp/bindings",
    "//lib/mtl",
    "//third_party/gtest",
  ]

  data_deps = [
    ":app",
  ]
}
